
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.20+70 (git sha1 6e907acf8, gcc 11.2.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
Reading /foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/1-sky130_fd_sc_hd__tt_025C_1v80.no_pg.lib as a blackbox

1. Executing Liberty frontend.
Imported 428 cell types from liberty file.

2. Executing Liberty frontend.
Imported 1 cell types from liberty file.

3. Executing Verilog-2005 frontend: /foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v
Parsing SystemVerilog input from `/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v' to AST representation.
Generating RTLIL representation for module `\adc_clkgen_with_edgedetect'.
Generating RTLIL representation for module `\adc_clk_generation'.
Generating RTLIL representation for module `\adc_edge_detect_circuit'.
Generating RTLIL representation for module `\delaycell_100ns'.
Generating RTLIL representation for module `\delaycell_200ns'.
Successfully finished Verilog frontend.

4. Generating Graphviz representation of design.
Writing dot description to `/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/hierarchy.dot'.
Dumping module adc_clkgen_with_edgedetect to page 1.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect
Used module:     \adc_clk_generation
Used module:         \delaycell_100ns
Used module:     \adc_edge_detect_circuit
Used module:         \delaycell_200ns

5.2. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect
Used module:     \adc_clk_generation
Used module:         \delaycell_100ns
Used module:     \adc_edge_detect_circuit
Used module:         \delaycell_200ns
Removed 0 unused modules.

6. Executing TRIBUF pass.

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect
Used module:     \adc_clk_generation
Used module:         \delaycell_100ns
Used module:     \adc_edge_detect_circuit
Used module:         \delaycell_200ns

7.1.2. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect
Used module:     \adc_clk_generation
Used module:         \delaycell_100ns
Used module:     \adc_edge_detect_circuit
Used module:         \delaycell_200ns
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.2.4. Executing PROC_INIT pass (extract init attributes).

7.2.5. Executing PROC_ARST pass (detect async resets in processes).

7.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module delaycell_200ns.
<suppressed ~40 debug messages>
Optimizing module delaycell_100ns.
<suppressed ~20 debug messages>
Optimizing module adc_edge_detect_circuit.
Optimizing module adc_clk_generation.
Optimizing module adc_clkgen_with_edgedetect.

7.3. Executing FLATTEN pass (flatten design).
Deleting now unused module delaycell_200ns.
Deleting now unused module delaycell_100ns.
Deleting now unused module adc_edge_detect_circuit.
Deleting now unused module adc_clk_generation.
<suppressed ~6 debug messages>

7.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 100 unused cells and 204 unused wires.
<suppressed ~101 debug messages>

7.6. Executing CHECK pass (checking for obvious problems).
Checking module adc_clkgen_with_edgedetect...
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.enable_dlycontrol is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [5] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [4] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [3] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [2] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [1] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.\edgedetect.dly200cell.dlycontrol [0] is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.$flatten\edgedetect.\dly200cell.$dummywireforinterface\j is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.$flatten\clkgen.\delay_100ns_3.$dummywireforinterface\j is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.$flatten\clkgen.\delay_100ns_2.$dummywireforinterface\j is used but has no driver.
Warning: Wire adc_clkgen_with_edgedetect.$flatten\clkgen.\delay_100ns_1.$dummywireforinterface\j is used but has no driver.
Found and reported 11 problems.

7.7. Executing OPT pass (performing simple optimizations).

7.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
<suppressed ~288 debug messages>
Removed a total of 96 cells.

7.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~100 debug messages>

7.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
<suppressed ~864 debug messages>
Removed a total of 288 cells.

7.7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 0 unused cells and 288 unused wires.
<suppressed ~1 debug messages>

7.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.7.9. Rerunning OPT passes. (Maybe there is more to do..)

7.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.7.13. Executing OPT_DFF pass (perform DFF optimizations).

7.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.7.16. Finished OPT passes. (There is nothing left to do.)

7.8. Executing FSM pass (extract and optimize FSM).

7.8.1. Executing FSM_DETECT pass (finding FSMs in design).

7.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.9. Executing OPT pass (performing simple optimizations).

7.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.9.6. Executing OPT_DFF pass (perform DFF optimizations).

7.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.9.9. Finished OPT passes. (There is nothing left to do.)

7.10. Executing WREDUCE pass (reducing word size of cells).

7.11. Executing PEEPOPT pass (run peephole optimizers).

7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module adc_clkgen_with_edgedetect:
  creating $alu model for $flatten\clkgen.\delay_100ns_1.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10 ($lt): new $alu
  creating $alu model for $flatten\clkgen.\delay_100ns_2.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10 ($lt): new $alu
  creating $alu model for $flatten\clkgen.\delay_100ns_3.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10 ($lt): new $alu
  creating $alu model for $flatten\edgedetect.\dly200cell.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:190$110 ($lt): new $alu
  creating $alu cell for $flatten\edgedetect.\dly200cell.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:190$110: $auto$alumacc.cc:485:replace_alu$313
  creating $alu cell for $flatten\clkgen.\delay_100ns_3.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10: $auto$alumacc.cc:485:replace_alu$318
  creating $alu cell for $flatten\clkgen.\delay_100ns_2.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10: $auto$alumacc.cc:485:replace_alu$323
  creating $alu cell for $flatten\clkgen.\delay_100ns_1.$lt$/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/src/adc_clkgen_with_edgedetect.v:145$10: $auto$alumacc.cc:485:replace_alu$328
  created 4 $alu and 0 $macc cells.

7.14. Executing SHARE pass (SAT-based resource sharing).

7.15. Executing OPT pass (performing simple optimizations).

7.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.
<suppressed ~4 debug messages>

7.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.15.6. Executing OPT_DFF pass (perform DFF optimizations).

7.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 4 unused cells and 8 unused wires.
<suppressed ~5 debug messages>

7.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.15.9. Rerunning OPT passes. (Maybe there is more to do..)

7.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.15.13. Executing OPT_DFF pass (perform DFF optimizations).

7.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.15.16. Finished OPT passes. (There is nothing left to do.)

7.16. Executing MEMORY pass.

7.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.18. Executing OPT pass (performing simple optimizations).

7.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.
<suppressed ~29 debug messages>

7.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.18.3. Executing OPT_DFF pass (perform DFF optimizations).

7.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

7.18.5. Finished fast OPT passes.

7.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.20. Executing OPT pass (performing simple optimizations).

7.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

7.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.20.6. Executing OPT_SHARE pass.

7.20.7. Executing OPT_DFF pass (perform DFF optimizations).

7.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

7.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.20.10. Finished OPT passes. (There is nothing left to do.)

7.21. Executing TECHMAP pass (map to technology primitives).

7.21.1. Executing Verilog-2005 frontend: /foss/tools/yosys/6e907ac/bin/../share/yosys/techmap.v
Parsing Verilog input from `/foss/tools/yosys/6e907ac/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.21.2. Continuing TECHMAP pass.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~280 debug messages>

7.22. Executing OPT pass (performing simple optimizations).

7.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.
<suppressed ~105 debug messages>

7.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.22.3. Executing OPT_DFF pass (perform DFF optimizations).

7.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 18 unused cells and 111 unused wires.
<suppressed ~19 debug messages>

7.22.5. Finished fast OPT passes.

7.23. Executing ABC pass (technology mapping using ABC).

7.23.1. Extracting gate netlist of module `\adc_clkgen_with_edgedetect' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 2 outputs.

7.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.23.1.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

7.24. Executing OPT pass (performing simple optimizations).

7.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

7.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

7.24.3. Executing OPT_DFF pass (perform DFF optimizations).

7.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 0 unused cells and 15 unused wires.
<suppressed ~5 debug messages>

7.24.5. Finished fast OPT passes.

7.25. Executing HIERARCHY pass (managing design hierarchy).

7.25.1. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect

7.25.2. Analyzing design hierarchy..
Top module:  \adc_clkgen_with_edgedetect
Removed 0 unused modules.

7.26. Printing statistics.

=== adc_clkgen_with_edgedetect ===

   Number of wires:                 76
   Number of wire bits:            607
   Number of public wires:          74
   Number of public wire bits:     605
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                313
     $_ANDNOT_                       1
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          1
     sky130_fd_sc_hd__and2_1       100
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__buf_4          6
     sky130_fd_sc_hd__mux2_1       100
     sky130_mm_sc_hd_dlyPoly5ns    100

7.27. Executing CHECK pass (checking for obvious problems).
Checking module adc_clkgen_with_edgedetect...
Found and reported 0 problems.

8. Generating Graphviz representation of design.
Writing dot description to `/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/post_techmap.dot'.
Dumping module adc_clkgen_with_edgedetect to page 1.
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_1._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_2._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [0] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [10] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [11] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [12] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [13] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [14] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [15] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [16] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [17] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [18] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [19] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [1] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [2] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [3] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [4] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [5] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [6] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [7] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [8] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigb_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._sigc_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [9] 1
Warning: WIDTHLABEL \clkgen.delay_100ns_3._siga_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [0] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [0] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [0] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [0] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [10] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [11] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [12] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [13] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [14] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [15] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [16] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [17] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [18] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [19] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [1] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [20] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [21] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [22] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [23] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [24] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [25] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [26] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [27] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [28] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [29] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [2] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [30] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [31] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [32] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [33] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [34] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [35] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [36] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [37] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [38] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [39] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [3] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [4] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [5] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [6] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [7] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [8] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigb_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._sigc_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [9] 1
Warning: WIDTHLABEL \edgedetect.dly200cell._siga_ [10] 1

9. Executing SHARE pass (SAT-based resource sharing).

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_clkgen_with_edgedetect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_clkgen_with_edgedetect.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_clkgen_with_edgedetect'.
Removed a total of 0 cells.

10.6. Executing OPT_DFF pass (perform DFF optimizations).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_clkgen_with_edgedetect.

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 0 unused cells and 35 unused wires.
<suppressed ~35 debug messages>

12. Printing statistics.

=== adc_clkgen_with_edgedetect ===

   Number of wires:                 41
   Number of wire bits:            346
   Number of public wires:          39
   Number of public wire bits:     344
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                313
     $_ANDNOT_                       1
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          1
     sky130_fd_sc_hd__and2_1       100
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__buf_4          6
     sky130_fd_sc_hd__mux2_1       100
     sky130_mm_sc_hd_dlyPoly5ns    100

mapping tbuf

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /foss/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/foss/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

14. Executing SIMPLEMAP pass (map simple cells to gate primitives).

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /foss/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/foss/pdk/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16. Executing SIMPLEMAP pass (map simple cells to gate primitives).

17. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

17.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\adc_clkgen_with_edgedetect':

18. Printing statistics.

=== adc_clkgen_with_edgedetect ===

   Number of wires:                 41
   Number of wire bits:            346
   Number of public wires:          39
   Number of public wire bits:     344
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                313
     $_ANDNOT_                       1
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          1
     sky130_fd_sc_hd__and2_1       100
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__buf_4          6
     sky130_fd_sc_hd__mux2_1       100
     sky130_mm_sc_hd_dlyPoly5ns    100

[INFO]: USING STRATEGY AREA 0

19. Executing ABC pass (technology mapping using ABC).

19.1. Extracting gate netlist of module `\adc_clkgen_with_edgedetect' to `/tmp/yosys-abc-jU5kDO/input.blif'..
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

19.1.1. Executing ABC.
Running ABC command: "/foss/tools/yosys/6e907ac/bin/yosys-abc" -s -f /tmp/yosys-abc-jU5kDO/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-jU5kDO/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-jU5kDO/input.blif 
ABC: + read_lib -w /foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.13 sec
ABC: Memory =    7.77 MB. Time =     0.13 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /foss/designs/SKY130_SAR-ADC/openlane/adc_clkgen_with_edgedetect/runs/kaiserschmarrn/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000.0 
ABC: Current delay (537.37 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      4 ( 75.0 %)   Cap = 10.0 ff (  9.4 %)   Area =       21.27 ( 25.0 %)   Delay =   444.71 ps  ( 75.0 %)               
ABC: Path  0 --       2 : 0    1 pi                       A =   0.00  Df =  16.7   -9.8 ps  S =  28.7 ps  Cin =  0.0 ff  Cout =   4.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       8 : 1    1 sky130_fd_sc_hd__inv_2   A =   3.75  Df =  37.4   -4.8 ps  S =  19.2 ps  Cin =  4.5 ff  Cout =   2.5 ff  Cmax = 331.4 ff  G =   53  
ABC: Path  2 --      10 : 4    1 sky130_fd_sc_hd__a211o_2 A =  10.01  Df = 444.7 -199.4 ps  S = 166.2 ps  Cin =  2.4 ff  Cout =  33.4 ff  Cmax = 325.0 ff  G = 1421  
ABC: Start-point = pi1 (\edgedetect.dly200cell.out).  End-point = po0 (\clkgen.delay_100ns_3.in).
ABC: + print_stats -m 
ABC: netlist                       : i/o =    5/    2  lat =    0  nd =     4  edge =      7  area =21.26  delay = 2.00  lev = 2
ABC: + write_blif /tmp/yosys-abc-jU5kDO/output.blif 

19.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

20. Executing SETUNDEF pass (replace undef values with defined constants).

21. Executing HILOMAP pass (mapping to constant drivers).

22. Executing SPLITNETS pass (splitting up multi-bit signals).

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_clkgen_with_edgedetect..
Removed 0 unused cells and 13 unused wires.
<suppressed ~5 debug messages>

24. Executing INSBUF pass (insert buffer cells for connected wires).

25. Executing CHECK pass (checking for obvious problems).
Checking module adc_clkgen_with_edgedetect...
Found and reported 0 problems.

26. Printing statistics.

=== adc_clkgen_with_edgedetect ===

   Number of wires:                525
   Number of wire bits:            542
   Number of public wires:         323
   Number of public wire bits:     340
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                513
     sky130_fd_sc_hd__a211o_2        1
     sky130_fd_sc_hd__and2_1       100
     sky130_fd_sc_hd__buf_1          3
     sky130_fd_sc_hd__buf_4          6
     sky130_fd_sc_hd__conb_1       200
     sky130_fd_sc_hd__inv_2          3
     sky130_fd_sc_hd__mux2_1       100
     sky130_mm_sc_hd_dlyPoly5ns    100

   Area for cell type \sky130_fd_sc_hd__and2_1 is unknown!
   Area for cell type \sky130_mm_sc_hd_dlyPoly5ns is unknown!

   Chip area for module '\adc_clkgen_with_edgedetect': 1954.374400

27. Executing Verilog backend.

27.1. Executing BMUXMAP pass.

27.2. Executing DEMUXMAP pass.
Dumping module `\adc_clkgen_with_edgedetect'.

Warnings: 307 unique messages, 699 total
End of script. Logfile hash: 3e96b2f871, CPU: user 2.40s system 0.11s, MEM: 41.32 MB peak
Yosys 0.20+70 (git sha1 6e907acf8, gcc 11.2.1 -fPIC -Os)
Time spent: 29% 4x read_liberty (0 sec), 11% 2x abc (0 sec), ...
